/*
   This file was generated automatically by Alchitry Labs version 1.1.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module testerfsm_2 (
    input clk,
    input rst,
    input a_switch,
    input b_switch,
    input cin_switch,
    input m_switch,
    output reg a_out,
    output reg b_out,
    output reg cin_out
  );
  
  
  
  localparam MANUAL_state = 1'd0;
  localparam AUTOMATIC_state = 1'd1;
  
  reg M_state_d, M_state_q = MANUAL_state;
  reg [0:0] M_a_state_d, M_a_state_q = 1'h0;
  reg [0:0] M_b_state_d, M_b_state_q = 1'h0;
  reg [0:0] M_cin_state_d, M_cin_state_q = 1'h0;
  reg [28:0] M_a_ctr_d, M_a_ctr_q = 1'h0;
  reg [27:0] M_b_ctr_d, M_b_ctr_q = 1'h0;
  reg [26:0] M_cin_ctr_d, M_cin_ctr_q = 1'h0;
  
  always @* begin
    M_state_d = M_state_q;
    M_a_ctr_d = M_a_ctr_q;
    M_a_state_d = M_a_state_q;
    M_b_ctr_d = M_b_ctr_q;
    M_cin_ctr_d = M_cin_ctr_q;
    M_cin_state_d = M_cin_state_q;
    M_b_state_d = M_b_state_q;
    
    a_out = M_a_state_q;
    b_out = M_b_state_q;
    cin_out = M_cin_state_q;
    
    case (M_state_q)
      AUTOMATIC_state: begin
        M_a_ctr_d = M_a_ctr_q + 1'h1;
        if (M_a_ctr_q == 29'h17d783ff) begin
          M_a_ctr_d = 1'h0;
          a_out = ~M_a_state_q;
          M_a_state_d = ~M_a_state_q;
        end
        M_b_ctr_d = M_b_ctr_q + 1'h1;
        if (M_b_ctr_q == 28'hbebc1ff) begin
          M_b_ctr_d = 1'h0;
          b_out = ~M_b_state_q;
          M_b_state_d = ~M_b_state_q;
        end
        M_cin_ctr_d = M_cin_ctr_q + 1'h1;
        if (M_cin_ctr_q == 27'h5f5e0ff) begin
          M_cin_ctr_d = 1'h0;
          cin_out = ~M_cin_state_q;
          M_cin_state_d = ~M_cin_state_q;
        end
        if (rst) begin
          M_a_ctr_d = 1'h0;
          M_b_ctr_d = 1'h0;
          M_cin_ctr_d = 1'h0;
          M_a_state_d = 1'h0;
          M_b_state_d = 1'h0;
          M_cin_state_d = 1'h0;
        end
        if (m_switch == 1'h0) begin
          M_state_d = MANUAL_state;
        end
      end
      MANUAL_state: begin
        a_out = a_switch;
        b_out = b_switch;
        cin_out = cin_switch;
        if (m_switch == 1'h1) begin
          M_state_d = AUTOMATIC_state;
        end
        M_a_ctr_d = 1'h0;
        M_b_ctr_d = 1'h0;
        M_cin_ctr_d = 1'h0;
        M_a_state_d = 1'h0;
        M_b_state_d = 1'h0;
        M_cin_state_d = 1'h0;
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_a_state_q <= M_a_state_d;
    M_b_state_q <= M_b_state_d;
    M_cin_state_q <= M_cin_state_d;
    M_a_ctr_q <= M_a_ctr_d;
    M_b_ctr_q <= M_b_ctr_d;
    M_cin_ctr_q <= M_cin_ctr_d;
    
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
endmodule
